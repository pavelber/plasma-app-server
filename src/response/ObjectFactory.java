//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1-b02-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.01.31 at 09:49:45 AM VET 
//


package response;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the response package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Einstein_QNAME = new QName("", "einstein");
    private final static QName _D_QNAME = new QName("", "D");
    private final static QName _E_QNAME = new QName("", "E");
    private final static QName _CollStrengthValue_QNAME = new QName("", "collStrengthValue");
    private final static QName _F_QNAME = new QName("", "F");
    private final static QName _A_QNAME = new QName("", "A");
    private final static QName _B_QNAME = new QName("", "B");
    private final static QName _C_QNAME = new QName("", "C");
    private final static QName _Oscstrength_QNAME = new QName("", "oscstrength");
    private final static QName _ScaleFactor_QNAME = new QName("", "scaleFactor");
    private final static QName _OscStrength_QNAME = new QName("", "oscStrength");
    private final static QName _LineWavelength_QNAME = new QName("", "lineWavelength");
    private final static QName _LevConfig_QNAME = new QName("", "levConfig");
    private final static QName _EndIonNum_QNAME = new QName("", "endIonNum");
    private final static QName _LineEinstein_QNAME = new QName("", "lineEinstein");
    private final static QName _MaxShellNum_QNAME = new QName("", "maxShellNum");
    private final static QName _StateEnergy_QNAME = new QName("", "stateEnergy");
    private final static QName _LevEnergy_QNAME = new QName("", "levEnergy");
    private final static QName _AtomWeight_QNAME = new QName("", "atomWeight");
    private final static QName _PointEnergy_QNAME = new QName("", "pointEnergy");
    private final static QName _OscStrengthValue_QNAME = new QName("", "oscStrengthValue");
    private final static QName _CrossValue_QNAME = new QName("", "crossValue");
    private final static QName _G_QNAME = new QName("", "g");
    private final static QName _StateNum_QNAME = new QName("", "stateNum");
    private final static QName _DcStrength_QNAME = new QName("", "dcStrength");
    private final static QName _StateG_QNAME = new QName("", "stateG");
    private final static QName _LevNum_QNAME = new QName("", "levNum");
    private final static QName _Potential_QNAME = new QName("", "potential");
    private final static QName _CalcName_QNAME = new QName("", "calcName");
    private final static QName _Threshold_QNAME = new QName("", "threshold");
    private final static QName _Wavelength_QNAME = new QName("", "wavelength");
    private final static QName _LineTarget_QNAME = new QName("", "lineTarget");
    private final static QName _AtomName_QNAME = new QName("", "atomName");
    private final static QName _Source_QNAME = new QName("", "source");
    private final static QName _StartIonNum_QNAME = new QName("", "startIonNum");
    private final static QName _Term_QNAME = new QName("", "term");
    private final static QName _CrmConfig_QNAME = new QName("", "crmConfig");
    private final static QName _RrCrossValue_QNAME = new QName("", "rrCrossValue");
    private final static QName _Target_QNAME = new QName("", "target");
    private final static QName _AtomSymbol_QNAME = new QName("", "atomSymbol");
    private final static QName _LineSource_QNAME = new QName("", "lineSource");
    private final static QName _StateConfig_QNAME = new QName("", "stateConfig");
    private final static QName _AiProbability_QNAME = new QName("", "aiProbability");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: response
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link State }
     * 
     */
    public State createState() {
        return new State();
    }

    /**
     * Create an instance of {@link AiJump }
     * 
     */
    public AiJump createAiJump() {
        return new AiJump();
    }

    /**
     * Create an instance of {@link ExJump }
     * 
     */
    public ExJump createExJump() {
        return new ExJump();
    }

    /**
     * Create an instance of {@link PiPoint }
     * 
     */
    public PiPoint createPiPoint() {
        return new PiPoint();
    }

    /**
     * Create an instance of {@link Level }
     * 
     */
    public Level createLevel() {
        return new Level();
    }

    /**
     * Create an instance of {@link PiJump }
     * 
     */
    public PiJump createPiJump() {
        return new PiJump();
    }

    /**
     * Create an instance of {@link Nist }
     * 
     */
    public Nist createNist() {
        return new Nist();
    }

    /**
     * Create an instance of {@link Fac }
     * 
     */
    public Fac createFac() {
        return new Fac();
    }

    /**
     * Create an instance of {@link CiJump }
     * 
     */
    public CiJump createCiJump() {
        return new CiJump();
    }

    /**
     * Create an instance of {@link CiPoint }
     * 
     */
    public CiPoint createCiPoint() {
        return new CiPoint();
    }

    /**
     * Create an instance of {@link Calc }
     * 
     */
    public Calc createCalc() {
        return new Calc();
    }

    /**
     * Create an instance of {@link Atom }
     * 
     */
    public Atom createAtom() {
        return new Atom();
    }

    /**
     * Create an instance of {@link Response }
     * 
     */
    public Response createResponse() {
        return new Response();
    }

    /**
     * Create an instance of {@link Line }
     * 
     */
    public Line createLine() {
        return new Line();
    }

    /**
     * Create an instance of {@link Ion }
     * 
     */
    public Ion createIon() {
        return new Ion();
    }

    /**
     * Create an instance of {@link Fit }
     * 
     */
    public Fit createFit() {
        return new Fit();
    }

    /**
     * Create an instance of {@link ExPoint }
     * 
     */
    public ExPoint createExPoint() {
        return new ExPoint();
    }

    /**
     * Create an instance of {@link RtJump }
     * 
     */
    public RtJump createRtJump() {
        return new RtJump();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "einstein")
    public JAXBElement<Double> createEinstein(Double value) {
        return new JAXBElement<Double>(_Einstein_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "D")
    public JAXBElement<Double> createD(Double value) {
        return new JAXBElement<Double>(_D_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "E")
    public JAXBElement<Double> createE(Double value) {
        return new JAXBElement<Double>(_E_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "collStrengthValue")
    public JAXBElement<Double> createCollStrengthValue(Double value) {
        return new JAXBElement<Double>(_CollStrengthValue_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "F")
    public JAXBElement<Double> createF(Double value) {
        return new JAXBElement<Double>(_F_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "A")
    public JAXBElement<Double> createA(Double value) {
        return new JAXBElement<Double>(_A_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "B")
    public JAXBElement<Double> createB(Double value) {
        return new JAXBElement<Double>(_B_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "C")
    public JAXBElement<Double> createC(Double value) {
        return new JAXBElement<Double>(_C_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "oscstrength")
    public JAXBElement<Double> createOscstrength(Double value) {
        return new JAXBElement<Double>(_Oscstrength_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "scaleFactor")
    public JAXBElement<Short> createScaleFactor(Short value) {
        return new JAXBElement<Short>(_ScaleFactor_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "oscStrength")
    public JAXBElement<Double> createOscStrength(Double value) {
        return new JAXBElement<Double>(_OscStrength_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lineWavelength")
    public JAXBElement<Double> createLineWavelength(Double value) {
        return new JAXBElement<Double>(_LineWavelength_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "levConfig")
    public JAXBElement<String> createLevConfig(String value) {
        return new JAXBElement<String>(_LevConfig_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "endIonNum")
    public JAXBElement<Short> createEndIonNum(Short value) {
        return new JAXBElement<Short>(_EndIonNum_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lineEinstein")
    public JAXBElement<Double> createLineEinstein(Double value) {
        return new JAXBElement<Double>(_LineEinstein_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "maxShellNum")
    public JAXBElement<Short> createMaxShellNum(Short value) {
        return new JAXBElement<Short>(_MaxShellNum_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stateEnergy")
    public JAXBElement<Double> createStateEnergy(Double value) {
        return new JAXBElement<Double>(_StateEnergy_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "levEnergy")
    public JAXBElement<Double> createLevEnergy(Double value) {
        return new JAXBElement<Double>(_LevEnergy_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "atomWeight")
    public JAXBElement<Double> createAtomWeight(Double value) {
        return new JAXBElement<Double>(_AtomWeight_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "pointEnergy")
    public JAXBElement<Double> createPointEnergy(Double value) {
        return new JAXBElement<Double>(_PointEnergy_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "oscStrengthValue")
    public JAXBElement<Double> createOscStrengthValue(Double value) {
        return new JAXBElement<Double>(_OscStrengthValue_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "crossValue")
    public JAXBElement<Double> createCrossValue(Double value) {
        return new JAXBElement<Double>(_CrossValue_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "g")
    public JAXBElement<Short> createG(Short value) {
        return new JAXBElement<Short>(_G_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stateNum")
    public JAXBElement<Integer> createStateNum(Integer value) {
        return new JAXBElement<Integer>(_StateNum_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "dcStrength")
    public JAXBElement<Double> createDcStrength(Double value) {
        return new JAXBElement<Double>(_DcStrength_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stateG")
    public JAXBElement<Short> createStateG(Short value) {
        return new JAXBElement<Short>(_StateG_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "levNum")
    public JAXBElement<Integer> createLevNum(Integer value) {
        return new JAXBElement<Integer>(_LevNum_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "potential")
    public JAXBElement<Double> createPotential(Double value) {
        return new JAXBElement<Double>(_Potential_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "calcName")
    public JAXBElement<String> createCalcName(String value) {
        return new JAXBElement<String>(_CalcName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "threshold")
    public JAXBElement<Double> createThreshold(Double value) {
        return new JAXBElement<Double>(_Threshold_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "wavelength")
    public JAXBElement<Double> createWavelength(Double value) {
        return new JAXBElement<Double>(_Wavelength_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lineTarget")
    public JAXBElement<Integer> createLineTarget(Integer value) {
        return new JAXBElement<Integer>(_LineTarget_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "atomName")
    public JAXBElement<String> createAtomName(String value) {
        return new JAXBElement<String>(_AtomName_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "source")
    public JAXBElement<Integer> createSource(Integer value) {
        return new JAXBElement<Integer>(_Source_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Short }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "startIonNum")
    public JAXBElement<Short> createStartIonNum(Short value) {
        return new JAXBElement<Short>(_StartIonNum_QNAME, Short.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "term")
    public JAXBElement<String> createTerm(String value) {
        return new JAXBElement<String>(_Term_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "crmConfig")
    public JAXBElement<String> createCrmConfig(String value) {
        return new JAXBElement<String>(_CrmConfig_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "rrCrossValue")
    public JAXBElement<Double> createRrCrossValue(Double value) {
        return new JAXBElement<Double>(_RrCrossValue_QNAME, Double.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "target")
    public JAXBElement<Integer> createTarget(Integer value) {
        return new JAXBElement<Integer>(_Target_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "atomSymbol")
    public JAXBElement<String> createAtomSymbol(String value) {
        return new JAXBElement<String>(_AtomSymbol_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Integer }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lineSource")
    public JAXBElement<Integer> createLineSource(Integer value) {
        return new JAXBElement<Integer>(_LineSource_QNAME, Integer.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "stateConfig")
    public JAXBElement<String> createStateConfig(String value) {
        return new JAXBElement<String>(_StateConfig_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Double }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "aiProbability")
    public JAXBElement<Double> createAiProbability(Double value) {
        return new JAXBElement<Double>(_AiProbability_QNAME, Double.class, null, value);
    }

}
